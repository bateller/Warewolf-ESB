<Window x:Class="Dev2.Studio.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:bdsviews="clr-namespace:Unlimited.Applications.BusinessDesignStudio.Views"
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
        xmlns:customControls="clr-namespace:Dev2.Studio.Core.CustomControls;assembly=Dev2.Studio.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dataList="clr-namespace:Dev2.Studio.Views.DataList"
        xmlns:explorer="clr-namespace:Dev2.Studio.Views.Explorer"
        xmlns:help="clr-namespace:Dev2.Help"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:igDock="http://infragistics.com/DockManager"
        xmlns:igExtensions="clr-namespace:Dev2.Studio.Dock"
        xmlns:igWindows="http://infragistics.com/Windows"
        xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Dev2.Studio.ViewModels"
        x:Name="MainViewWindow"
        Title="{Binding DisplayName}"
        Closing="MainView_OnClosing"
        Icon="pack://application:,,,/Warewolf Studio;component/Warewolf.ico"
        Opacity="1"
        WindowState="Maximized"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
        mc:Ignorable="d">


    <Window.Resources>
        <Storyboard x:Key="OnLoaded">
            <DoubleAnimation Duration="0:0:0.3"
                             From="0.0"
                             Storyboard.TargetName="LayoutRoot"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             To="1.0" />
            <DoubleAnimation Duration="0:0:0.3"
                             From="0.8"
                             Storyboard.TargetName="LayoutRoot"
                             Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                             To="1" />
            <DoubleAnimation Duration="0:0:0.3"
                             From="0.8"
                             Storyboard.TargetName="LayoutRoot"
                             Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                             To="1" />
        </Storyboard>



        <!--  ========== DockableTabGroupPaneTemplate ==========  -->
        <ControlTemplate x:Key="NewButtonTabGroupPaneTemplate" TargetType="{x:Type igDock:TabGroupPane}">
            <DockPanel ClipToBounds="True"
                       KeyboardNavigation.TabNavigation="Local"
                       SnapsToDevicePixels="True">
                <DockPanel x:Name="PART_HeaderArea"
                           Panel.ZIndex="1"
                           DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                    <!--  Tabbed menu dock panel  -->
                    <DockPanel Background="{TemplateBinding Background}" IsEnabled="False">
                        <!--  Right Tab menu buttons  -->
                        <Button x:Name="closeBtn"
                                Command="{x:Static igDock:TabGroupPane.CloseSelectedItemCommand}"
                                DockPanel.Dock="Right"
                                Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}}"
                                Visibility="Visible" />
                        <!--  Drop down menu for open files in Window  -->
                        <Menu x:Name="filesMenu"
                              DockPanel.Dock="Right"
                              Visibility="Visible">
                            <MenuItem x:Name="PART_FilesMenuItem" Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}}" />
                        </Menu>
                        <!--  ********** Tab Buttons Dock panel  -->
                        <DockPanel HorizontalAlignment="Left" DockPanel.Dock="Left">
                            <ItemsPresenter x:Name="PART_TabHeaderPanel"
                                            Margin="5,2,10,0"
                                            DockPanel.Dock="Left"
                                            KeyboardNavigation.TabIndex="1" />
                        </DockPanel>

                    </DockPanel>
                </DockPanel>
                <Border x:Name="ContentPanel"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        KeyboardNavigation.DirectionalNavigation="Contained"
                        KeyboardNavigation.TabIndex="2"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True"
                        Visibility="Visible">
                    <Border x:Name="InnerBorder"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}}"
                            BorderThickness="1"
                            CornerRadius="1"
                            SnapsToDevicePixels="True">
                        <Border x:Name="ThickInnerBorder"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                                BorderThickness="2"
                                SnapsToDevicePixels="True">
                            <Border x:Name="InnerMostBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding SelectedContent}"
                                                  ContentSource="SelectedContent"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Border>
                </Border>
            </DockPanel>

            <ControlTemplate.Triggers>

                <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="TabStripPlacement" Value="Top" />
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Top">
                    <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,10,0,5" />
                    <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Right" />
                    <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Right" />
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Bottom">
                    <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="5,0,10,2" />
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Left">
                    <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,10,0,5" />
                    <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                    <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Right">
                    <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,5,2,10" />
                    <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                    <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                </Trigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="WhenHostedInBrowser" />
                    </MultiDataTrigger.Conditions>

                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="Always" />
            </ControlTemplate.Triggers>



        </ControlTemplate>


        

        <!--  Main Template  -->
        <ControlTemplate x:Key="InsigniaTemplate" TargetType="{x:Type Button}">
            <Grid x:Name="Grid" SnapsToDevicePixels="true">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DefaultBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DefaultBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Unfocused" />
                        <VisualState x:Name="Focused">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates" />
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="MouseOverBorder"
                       Opacity="0.6"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"
                       Visibility="Collapsed" />
                <Image x:Name="PressedBorder"
                       Opacity="1"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"
                       Visibility="Collapsed" />
                <Rectangle x:Name="FocusBorder"
                           Margin="2"
                           SnapsToDevicePixels="true"
                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                           StrokeDashArray="1 2"
                           StrokeThickness="1"
                           Visibility="Collapsed" />
                <Image x:Name="DefaultBorder"
                       Opacity="1"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"
                       Visibility="Visible" />
            </Grid>
        </ControlTemplate>

        <!--  Main Toolbar Button Menu Style  -->
        <Style x:Key="ButtonStyleRibbon" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Margin" Value="1,1,1,-3" />
            <Setter Property="Background" Value="{StaticResource BrushTransparent}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates" />
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="MouseOverBorder"
                                    Background="{StaticResource BrushMouseOver}"
                                    BorderBrush="{StaticResource BrushMouseOverBorder}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Visibility="Collapsed" />
                            <Border x:Name="PressedBorder"
                                    Background="{StaticResource BrushSelected}"
                                    BorderBrush="{StaticResource BrushSelectedBorder}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Visibility="Collapsed" />
                            <Rectangle x:Name="FocusBorder"
                                       Margin="2"
                                       RadiusX="2"
                                       RadiusY="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1"
                                       Visibility="Collapsed" />
                            <Border x:Name="DefaultBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBlockStyleRibbon" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style x:Key="ImageStyleRibbon" TargetType="{x:Type Image}">
            <Setter Property="Margin" Value="1" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="35" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <LinearGradientBrush x:Key="BrushMainHeaderTitleBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{StaticResource Color_050}" />
            <GradientStop Offset="0.05" Color="{StaticResource Color_050}" />
            <GradientStop Offset="0.0500001" Color="{StaticResource Color_005}" />
            <GradientStop Offset="0.9499999" Color="{StaticResource Color_005}" />
            <GradientStop Offset="0.95" Color="{StaticResource Color_050}" />
            <GradientStop Offset="1" Color="{StaticResource Color_050}" />
        </LinearGradientBrush>

        <Style x:Key="BorderStyleRibbon" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1,0,0,0" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushMainHeaderTitleBorder}" />
        </Style>

        <Style x:Key="TextBlockStyleRibbonHeader"
               BasedOn="{StaticResource TextBlockStyleRibbon}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Margin" Value="0,-2,0,0" />
            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            <Setter Property="Padding" Value="0,0,0,0" />
        </Style>

        <Style x:Key="TextBlockStyleRibbonItemHeader" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
        </Style>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded}" />
        </EventTrigger>
    </Window.Triggers>

    <Window.InputBindings>
        <KeyBinding Key="F4"
                    Command="{Binding ExitCommand}"
                    Modifiers="Alt" />
        <KeyBinding Key="T"
                    Command="{Binding SettingsCommand}"
                    Modifiers="Alt" />
        <KeyBinding Key="S"
                    Command="{Binding SaveCommand}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="R"
                    Command="{Binding ActiveItem.RunCommand}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="T"
                    Command="{Binding DebugCommand}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="F5" Command="{Binding DebugCommand}" />
        <KeyBinding Key="F6" Command="{Binding QuickDebugCommand}" />
        <KeyBinding Key="F7" Command="{Binding QuickViewInBrowserCommand}" />
        <KeyBinding Key="D"
                    Command="{Binding DeployAllCommand}"
                    Modifiers="Ctrl+Shift" />
        <KeyBinding Key="D"
                    Command="{Binding DeployCommand}"
                    Modifiers="Ctrl" />
        <KeyBinding Key="D"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="DatabaseService"
                    Modifiers="Ctrl+Shift" />
        <KeyBinding Key="P"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="ResourceService"
                    Modifiers="Ctrl+Shift" />
        <KeyBinding Key="W"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="WebService"
                    Modifiers="Ctrl+Shift" />
        <KeyBinding Key="N"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="Unknown"
                    Modifiers="Ctrl" />
        <KeyBinding Key="W"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="Workflow"
                    Modifiers="Ctrl" />
        <KeyBinding Key="C"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="Source"
                    Modifiers="Alt" />
        <KeyBinding Key="N"
                    Command="{Binding NewResourceCommand}"
                    CommandParameter="Service"
                    Modifiers="Alt" />
        <KeyBinding Key="S"
                    Command="{Binding SchedulerCommand}"
                    Modifiers="Alt" />
    </Window.InputBindings>

    <Grid x:Name="LayoutRoot"
          Opacity="0"
          RenderTransformOrigin="0.5,0.5"
          cal:Bind.Model="{Binding .}">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform />
            </TransformGroup>
        </Grid.RenderTransform>

        <Grid AutomationProperties.AutomationId="MainWindow">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border BorderBrush="{StaticResource BrushAccentColor}" BorderThickness="0,0,0,3">
                <Grid>
                    <!--  Warewolf Button  -->
                    <Button Width="50"
                            Height="50"
                            HorizontalAlignment="Center"
                            Command="{Binding ShowStartPageCommand}"
                            Style="{DynamicResource ButtonStyleRibbon}"
                            Template="{StaticResource InsigniaTemplate}" />

                    <StackPanel Orientation="Horizontal">

                        <!--  Workflow  -->
                        <Border Style="{StaticResource BorderStyleRibbon}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!--  ToolTip="New Workflow"  -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabWorkflowBtn_AutoID"
                                                Command="{Binding NewResourceCommand}"
                                                CommandParameter="Workflow"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource NewWorkFlow}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="New Service (Ctrl+W)" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="New" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabSaveBtn_AutoID"
                                                Command="{Binding SaveCommand}"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource Save-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Save (Ctrl+S)" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding SaveCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Save" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabDeployBtn_AutoID"
                                                Command="{Binding DeployCommand}"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>

                                                <Image Source="{StaticResource Deploy-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Deploy (Ctrl+D)" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Deploy" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!--  Data Connectors  -->
                        <Border Style="{StaticResource BorderStyleRibbon}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabDBServiceBtn_AutoID"
                                                Command="{Binding NewResourceCommand}"
                                                CommandParameter="DatabaseService"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource DatabaseService-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="New Database Connector (Ctrl+Shift+D)" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="DB" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabPluginServiceBtn_AutoID"
                                                Command="{Binding NewResourceCommand}"
                                                CommandParameter="ResourceService"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource PluginService-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="New Plugin Connector (Ctrl+Shift+P)" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="DLL" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabWebServiceBtn_AutoID"
                                                Command="{Binding NewResourceCommand}"
                                                CommandParameter="WebService"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource WebService-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="New Web Service Connector (Ctrl+Shift+W)" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Web" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!--  Execute  -->
                        <Border Style="{StaticResource BorderStyleRibbon}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonHomeTabSchedulerBtn_AutoID"
                                                Command="{Binding SchedulerCommand}"
                                                CommandParameter="Scheduler"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource TaskScheduler-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Scheduler" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding SchedulerCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Task" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button AutomationProperties.AutomationId="UI_RibbonDebugBtn_AutoID"
                                                Command="{Binding DebugCommand}"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>

                                                <Image Source="{Binding ActiveItem.DebugOutputViewModel.DebugImage,
                                                                        Converter={StaticResource NullToDebugImageConverter},
                                                                        FallbackValue=pack://application:\,\,\,\/Warewolf\ Studio\;component/Images/ExecuteDebugStart-32.png}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="{Binding ActiveItem.DebugOutputViewModel.DebugText,
                                                                         Converter={StaticResource NullToDebugRibbonButtonTextConverter},
                                                                         FallbackValue=Debug}" />

                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding DebugCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Debug" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!--  Settings  -->
                        <Border Style="{StaticResource BorderStyleRibbon}">
                            <Grid HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <StackPanel Orientation="Vertical">
                                        <Button HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                AutomationProperties.AutomationId="UI_RibbonHomeManageSecuritySettingsBtn_AutoID"
                                                Command="{Binding SettingsCommand}"
                                                Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource Settings-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Manage Settings" />
                                                <Image Style="{StaticResource AuthNoneIconRibbonStyle}" Visibility="{Binding SettingsCommand.UnauthorizedVisibility}" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Settings" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!--  Help  -->
                        <Border Style="{StaticResource BorderStyleRibbon}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Orientation="Vertical">
                                        <Button Command="{Binding ShowCommunityPageCommand}" Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource HelpCommunity-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Help" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Help" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button Command="{Binding AddLanguageHelpPageCommand}" Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource HelpLanguage-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="Warewolf Syntax Help" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="Syntax" />
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <Button Command="{Binding DisplayAboutDialogueCommand}" Style="{DynamicResource ButtonStyleRibbon}">
                                            <Grid>
                                                <Image Source="{StaticResource HelpAbout-32}"
                                                       Style="{StaticResource ImageStyleRibbon}"
                                                       ToolTip="About" />
                                            </Grid>
                                        </Button>
                                        <TextBlock Style="{StaticResource TextBlockStyleRibbonItemHeader}" Text="About" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>

                    </StackPanel>
                </Grid>
            </Border>

            <!--  Dockmanager for Side panels  -->
            <igDock:XamDockManager x:Name="dockManager"
                                   Grid.Row="1"
                                   AllowMaximizeFloatingWindows="True"
                                   AllowMinimizeFloatingWindows="True"
                                   AutomationProperties.AutomationId="UI_DocManager_AutoID"
                                   PaneDragEnded="DockManager_OnPaneDragEnded_"
                                   PaneDragOver="DockManager_OnPaneDragOver"
                                   PaneDragStarting="DockManager_OnPaneDragStarting">
                <i:Interaction.Behaviors>
                    <local:XamlDockManagerLayoutPersistenceBehavior LayoutDataPropertyName="MainViewDockingData"
                                                                    LayoutName="Default"
                                                                    UserInterfaceLayoutRepository="{Binding UserInterfaceLayoutRepository}" />
                </i:Interaction.Behaviors>

                <igDock:XamDockManager.Panes>
                    <igDock:SplitPane x:Name="DockBottom"
                                      Height="200"
                                      igDock:XamDockManager.InitialLocation="DockedBottom">
                        <igDock:TabGroupPane Template="{StaticResource NewButtonTabGroupPaneTemplate}">
                            <igDock:ContentPane x:Name="OutputPane"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                Header="Output"
                                                IsPinned="False">
                                <customControls:CachingContentHost cal:View.Model="{Binding ActiveItem.DebugOutputViewModel}" />
                            </igDock:ContentPane>

                        </igDock:TabGroupPane>
                    </igDock:SplitPane>

                    <igDock:SplitPane x:Name="DockLeft"
                                      Width="300"
                                      igDock:XamDockManager.InitialLocation="DockedLeft">
                        <igDock:TabGroupPane AutomationProperties.AutomationId="UI_TabPane_Left_AutoID">
                            <igDock:ContentPane x:Name="Explorer"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                AutomationProperties.AutomationId="UI_ExplorerPane_AutoID"
                                                Header="Explorer"
                                                IsPinned="False">
                                <explorer:ExplorerView AutomationProperties.AutomationId="UI_ExplorerControl_AutoID" DataContext="{Binding ExplorerViewModel}" />
                            </igDock:ContentPane>
                            <igDock:ContentPane x:Name="Toolbox"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                AutomationProperties.AutomationId="UI_ToolboxPane_AutoID"
                                                Header="Toolbox"
                                                IsPinned="False">
                                <bdsviews:ToolboxUserControl x:Name="Toolboxcontrol"
                                                             AutomationProperties.AutomationId="UI_ToolboxControl_AutoID"
                                                             IsEnabled="{Binding HasActiveConnection}" />
                            </igDock:ContentPane>
                            <igDock:ContentPane x:Name="Variables"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                Header="Variables"
                                                IsPinned="False">
                                <dataList:DataListView DataContext="{Binding ActiveItem.DataListViewModel}" />
                            </igDock:ContentPane>
                        </igDock:TabGroupPane>
                    </igDock:SplitPane>
                </igDock:XamDockManager.Panes>

                <!--  Document Content Host - For Tabbed workflow pane  -->
                <igDock:DocumentContentHost x:Name="DocumentHost" AutomationProperties.AutomationId="UI_DocumentHost_AutoID">
                    <igDock:SplitPane x:Name="DockCentre" AutomationProperties.AutomationId="UI_SplitPane_AutoID">
                        <igDock:TabGroupPane x:Name="TabManager"
                                             AutomationProperties.AutomationId="UI_TabManager_AutoID"
                                             TabStripPlacement="Top">
                            <i:Interaction.Behaviors>
                                <local:TabGroupPaneBindingBehavior DocumentHost="{Binding ElementName=DocumentHost}" SelectedItem="{Binding DataContext.ActiveItem, ElementName=DocumentHost, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                            <igExtensions:ContentPaneFactory.PaneFactory>
                                <igExtensions:ContentPaneFactory ContentPath="WorkSurfaceViewModel"
                                                                 ItemsSource="{Binding Items}"
                                                                 TabHeaderPath="WorkSurfaceViewModel">
                                    <igExtensions:ContentPaneFactory.ContainerStyle>
                                        <Style BasedOn="{StaticResource {x:Type igDock:ContentPane}}" TargetType="{x:Type igDock:ContentPane}">
                                            <!--  Work Item Tab Header Template and Buttons  -->
                                            <Setter Property="TabHeaderTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Width="16"
                                                                   Height="16"
                                                                   Margin="4,4,4,2"
                                                                   AutomationProperties.AutomationId="{Binding DisplayName}"
                                                                   Source="{Binding IconPath}" />
                                                            <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
                                                            <Image Margin="5,0,0,0"
                                                                   Style="{StaticResource AuthNoneIconStyle}"
                                                                   ToolTip="{x:Static help:HelpTextResources.WorkflowDesignerSecurityToolTipNone}"
                                                                   Visibility="{Binding CanSave,
                                                                                        Converter={StaticResource BoolToVisibilityConverterNegative}}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentControl MouseDown="ContentControl_MouseEnter" cal:View.Model="{Binding .}" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>


                                            <Setter Property="AutomationProperties.AutomationId" Value="{Binding DisplayName}" />
                                            <Setter Property="SaveInLayout" Value="false" />
                                        </Style>
                                    </igExtensions:ContentPaneFactory.ContainerStyle>
                                </igExtensions:ContentPaneFactory>
                            </igExtensions:ContentPaneFactory.PaneFactory>
                        </igDock:TabGroupPane>
                    </igDock:SplitPane>
                </igDock:DocumentContentHost>
            </igDock:XamDockManager>
        </Grid>
    </Grid>
</Window>