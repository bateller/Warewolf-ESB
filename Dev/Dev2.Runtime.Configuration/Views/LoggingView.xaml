<UserControl x:Class="Dev2.Runtime.Configuration.Views.LoggingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
             xmlns:controls="clr-namespace:System.Windows.Controls"
             xmlns:converters="clr-namespace:Dev2.Studio.Core.AppResources.Converters"
             xmlns:converters2="clr-namespace:Dev2.Runtime.Configuration.Converters"
             xmlns:customControls2="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:trigger="clr-namespace:Dev2.CustomControls.Trigger;assembly=Dev2.CustomControls">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters2:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterNegative"
                                                   FalseValue="Visible"
                                                   TrueValue="Collapsed" />
            <converters2:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:BooleanInvertConverter x:Key="BooleanInvertConverter" />
            <converters2:MultiBoolToBoolConverter x:Key="MultiBoolToBoolConverter" Operator="And" />
    	</ResourceDictionary>
    </UserControl.Resources>

    <!--  <ScrollViewer Margin="5,0,0,0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">  -->

		<Grid cal:Bind.Model="{Binding .}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

        <CheckBox Grid.Row="0"
                  Grid.Column="0"
                  Margin="0,5,0,5"
                  AutomationProperties.AutomationId="UI_SettingsLogging_TurnOnLogging_Check"
                  Content="Turn Logging On"
                  IsChecked="{Binding Object.IsLoggingEnabled,
                                      UpdateSourceTrigger=PropertyChanged}" />

        <GroupBox Grid.Row="1"
                  BorderBrush="#FFB9C9DA"
                  Header="What to log"
                  IsEnabled="{Binding Object.IsLoggingEnabled}"
                  Padding="3">
				<Grid>
					<Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Grid Grid.Row="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="200" />
							<ColumnDefinition Width="2*" />
						</Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Margin="0,3,0,0"
                               Text="Log :" />
                    <Grid Grid.Row="0"
                          Grid.Column="1"
                          Grid.ColumnSpan="2">
							<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   Margin="3"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="Workflows :" />
                        <CheckBox x:Name="LogAll"
                                  Grid.Column="1"
                                  Margin="3"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="Log all" />
						</Grid>

                    <CheckBox Grid.Row="1"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_Version_Check"
                              Content="Version"
                              IsChecked="{Binding Object.IsVersionLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                    <Grid Grid.Row="1"
                          Grid.Column="1"
                          Margin="0,5,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>

                        <customControls2:FilterTextBox x:Name="FilterTextBox" Grid.Column="0">
                            <!--
                            <i:Interaction.Triggers>
                                <trigger:DelayTextChangedEventTrigger DelayInMilliSeconds="100">
                                    <cal:ActionMessage MethodName="UpdateSearchFilter">
                                        <cal:Parameter Value="{Binding ElementName=FilterTextBox, Path=SearchText}"/>
                                    </cal:ActionMessage>
                                </trigger:DelayTextChangedEventTrigger>
                            </i:Interaction.Triggers>
                            -->
                        </customControls2:FilterTextBox>

                        <customControls2:CircularProgressBar Grid.Column="1"
                                                             Width="15"
                                                             Height="15"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             AutomationProperties.AutomationId="UI_IndicatorRefresh_AutoID"
                                                             Visibility="{Binding IsRefreshing,
                                                                                  Converter={StaticResource BoolToVisibilityConverter}}" />
                        
                        <Button Grid.Column="1"
                                 Margin="0,0,4,0" 
                                AutomationProperties.AutomationId="UI_SourceServerRefreshbtn_AutoID"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                 BorderThickness="0"
                                Visibility="{Binding IsRefreshing,
                                                     Converter={StaticResource BoolToVisibilityConverterNegative}}">
                            
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cal:ActionMessage MethodName="RefreshData" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                            <Image Width="14"
                                   Height="14"
                                   HorizontalAlignment="Left"
                                   Source="/../Warewolf.Studio.Resources/Images/Refresh-32.png" />
                        </Button>
                    </Grid>
                        
                    <CheckBox Grid.Row="2"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_Type_Check"
                              Content="Type"
                              IsChecked="{Binding Object.IsTypeLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                    <ListBox x:Name="Workflows"
                             Grid.Row="2"
                             Grid.RowSpan="7"
                             Grid.Column="1"
                             Grid.ColumnSpan="2"
							     Height="200"
                             Margin="3"
                             AutomationProperties.AutomationId="UI_SettingsLogging_Workflows_List"
                                 DisplayMemberPath="ResourceName"
                             IsEnabled="{Binding LogAll,
                                                 Converter={StaticResource BooleanInvertConverter}}"
							     ItemsSource="{Binding FilteredWorkflows}"
                             SelectionMode="Multiple">
							<ListBox.ItemContainerStyle>
								<Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                <Setter Property="Padding" Value="2,0,0,0" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsSelected" Value="true">
                                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
													</Trigger>
                                                <!--
                                                    MultiTrigger>
							    <MultiTrigger.Conditions>
								    <Condition Property="IsSelected" Value="true"/>
								    <Condition Property="Selector.IsSelectionActive" Value="false"/>
							    </MultiTrigger.Conditions>
							    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                    </MultiTrigger
                                                -->
													<Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ListBox.ItemContainerStyle>
						</ListBox>
                    <CheckBox Grid.Row="3"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_Duration_Check"
                              Content="Duration"
                              IsChecked="{Binding Object.IsDurationLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Grid.Row="4"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_DateAndTime_Check"
                              Content="Date and Time"
                              IsChecked="{Binding Object.IsDataAndTimeLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Grid.Row="5"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_Input_Check"
                              Content="Inputs"
                              IsChecked="{Binding Object.IsInputLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Grid.Row="6"
                              Grid.Column="0"
                              Margin="0,3,0,0"
                              VerticalAlignment="Center"
                              AutomationProperties.AutomationId="UI_SettingsLogging_Ouput_Check"
                              Content="Outputs"
                              IsChecked="{Binding Object.IsOutputLogged,
                                                  UpdateSourceTrigger=PropertyChanged}" />

                    <StackPanel Grid.Row="7"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBox Width="20"
                                 Margin="0,3,0,0"
                                 VerticalAlignment="Center"
                                 Text="{Binding Object.NestedLevelCount,
                                                UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Margin="3,0,0,0"
                                   VerticalAlignment="Center"
                                   AutomationProperties.AutomationId="UI_SettingsLogging_NestedLevels_Text"
                                   Text="Nested Levels" />
                    </StackPanel>

					</Grid>
				</Grid>
			</GroupBox>
        <GroupBox Grid.Row="2"
                  BorderBrush="#FFB9C9DA"
                  Header="Where to log to"
                  IsEnabled="{Binding Object.IsLoggingEnabled}"
                  Padding="3">
				<Grid>
					<Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

					<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="200" />
						<ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                                     
                <TextBlock Grid.Row="1"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="Log File Ouput Directory :" />
                    
                <TextBox Grid.Row="1"
                         Grid.Column="1"
                         Margin="3"
                         AutomationProperties.AutomationId="UI_SettingsLogging_PostWorkflow_Text"
                         Text="{Binding Object.LogFileDirectory,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}" />

				</Grid>
			</GroupBox>

        <GroupBox Grid.Row="3"
                  BorderBrush="#FFB9C9DA"
                  Header="After logging"
                  IsEnabled="{Binding Object.IsLoggingEnabled}"
                  Padding="3">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="200" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>
                
                <CheckBox Grid.Row="1"
                          Content="Run a workflow"
                          IsChecked="{Binding RunPostWorkflow,
                                              Mode=TwoWay}"
                          IsThreeState="False" />

                <TextBlock Grid.Row="2"
                           Grid.Column="0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="Workflow name :" />

                <controls:AutoCompleteBox x:Name="PostWorkflow"
                        Grid.Row="2"
                                          Grid.Column="1"
						Margin="3"
                                          AutomationProperties.AutomationId="UI_SettingsLogging_PostWorkflow_Text"
						FilterMode="Contains"
                                          IsEnabled="{Binding RunPostWorkflow}"
						IsTextCompletionEnabled="True"                     
						ItemsSource="{Binding WorkflowNames}"
                        MaxDropDownHeight="200"
                                          SelectedItem="{Binding PostWorkflowName,
                                                                 Mode=TwoWay,
                                                                 UpdateSourceTrigger=PropertyChanged,
                                                                 ValidatesOnDataErrors=True}">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                            <!--  Empty template to force damn wpf not to bug on cancel  -->
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    <!--
                        <controls:AutoCompleteBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ResourceName}"/>
							</DataTemplate>
                        </controls:AutoCompleteBox.ItemTemplate>
                    -->
					</controls:AutoCompleteBox>

                <TextBlock Grid.Row="3"
                           Grid.Column="0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Text="Service Input (log name) :" />
                <ComboBox Grid.Row="3"
                          Grid.Column="1"
                          Margin="3"
                          AutomationProperties.AutomationId="UI_SettingsLogging_ServiceInput_Text"
						ItemsSource="{Binding ServiceInputOptions}"
                          SelectedItem="{Binding SelectedServiceInputOption,
                                                 Mode=TwoWay,
                                                 UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource MultiBoolToBoolConverter}">
                            <Binding Path="HasServiceInputOptions" />
                            <Binding Path="RunPostWorkflow" />
                             </MultiBinding>
                        </ComboBox.IsEnabled>
                    <!--
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <cal:ActionMessage MethodName="LoadServiceInputs" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    -->
                </ComboBox>
				</Grid>
			</GroupBox>
		</Grid>
    <!--  </ScrollViewer>  -->
</UserControl>
