<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:igControlsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igShared="http://schemas.infragistics.com/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="PresentationOptions d">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Colors.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Brushes.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Styles.xaml" />

        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Elements/TextBox.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Elements/CheckBox.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Elements/ComboBox.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Elements/ScrollBar.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  BRUSHES  *********************************  -->
    <!--  Header Brushes  -->
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="HeaderHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="HeaderForegroundBrush" Color="{StaticResource Color_001}" />

    <!--  Cell Brushes  -->
    <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="CellItemHoverBorderBrush" Color="{StaticResource Color_016}" />
    <SolidColorBrush x:Key="CellItemFocusBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="CellItemFocusBorderBrush" Color="{StaticResource Color_024}" />

    <!--  Popup Resizer Brushes  -->
    <SolidColorBrush x:Key="PopupResizerBorderBrush" Color="{StaticResource Color_004}" />

    <!--  MultiColumnComboEditor Brushes  -->
    <SolidColorBrush x:Key="ClearSelectionBackgroundBrush" Color="{StaticResource Color_003}" />

    <!--  *********************************  Generic Variables  *********************************  -->
    <Thickness x:Key="ComboCellBorderThickness">0,0,1,1</Thickness>
    <System:Double x:Key="ComboCellBorderMouseOverThickness">1</System:Double>
    <System:Double x:Key="ComboCellBorderSelectedThickness">0</System:Double>
    <Thickness x:Key="ComboCellBorderFocusThickness">0 2 0 2</Thickness>
    <System:Double x:Key="ComboRadius">0</System:Double>
    <CornerRadius x:Key="ComboTextBoxRadius">0</CornerRadius>
    <CornerRadius x:Key="ComboPopoutRadius">0</CornerRadius>

    <!--  ToggleButton Width for EditorItem  -->
    <System:Double x:Key="ToggleButtonWidth">32</System:Double>

    <!--
        ******************************************************** WPF SPECIFIC RESOURCES ***********************************************************
        ********************************************************************************************************************************************************************
    -->

    <!--  *********************************  Popup Style  *********************************  -->
    <Style x:Key="PopupStyle" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
    </Style>

    <!--  *********************************  SpecializedTextBox Style  *********************************  -->
    <Style x:Key="SpecializedTextBoxStyle" TargetType="igPrimBase:SpecializedTextBox">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Padding" Value="8 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:SpecializedTextBox">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  VerticalAlignment="Center"
                                  Padding="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        ******************************************************* SL-WPF SHARED RESOURCES  ***************************************************************************
        *********************************************************************************************************************************************************************
    -->

    <!--  *********************************  Converters  *********************************  -->
    <igPrimBase:ValueConverterGroup x:Key="boolToVisibility">
        <!--  if true sets visibility to Visible  -->
        <igPrimBase:FixedValueConverter>
            <igPrimBase:FixedValueConverter.SourceValue>
                <System:Boolean>True</System:Boolean>
            </igPrimBase:FixedValueConverter.SourceValue>
            <igPrimBase:FixedValueConverter.DestinationValue>
                <Visibility>Visible</Visibility>
            </igPrimBase:FixedValueConverter.DestinationValue>
        </igPrimBase:FixedValueConverter>
        <!--  if false sets visibility to Collapsed  -->
        <igPrimBase:FixedValueConverter>
            <igPrimBase:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrimBase:FixedValueConverter.DestinationValue>
        </igPrimBase:FixedValueConverter>
    </igPrimBase:ValueConverterGroup>

    <!--  *********************************  Cross Template  *********************************  -->
    <ControlTemplate x:Key="CrossTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".7" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Cross" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  The button's background needs to be transparent to make it clickable  -->
            <Rectangle Width="{TemplateBinding Width}"
                       Height="{TemplateBinding Height}"
                       Fill="{StaticResource TransparentBrush}" />
            <!--  This is the "X" for the button  -->
            <Path x:Name="Cross"
                  Width="10"
                  Height="10"
                  Data="M17.978895,14.4374 L14.459287,17.981174 L9.5024157,13.021268 L4.5621309,17.986851 L1.0009997,14.46541 L5.96099,9.4979582 L1.0248781,4.5379386 L4.544733,    1.0159005 L9.5026722,5.9762726 L14.459279,0.99506438 L17.999273,4.5379333 L13.063161,9.5396385 z"
                  Fill="{TemplateBinding Background}"
                  Opacity=".5"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
        </Grid>
    </ControlTemplate>

    <!--  ******************************************* PopupResizer Style   *************************************  -->
    <Style x:Key="PopupResizerStyle" TargetType="igPrimBase:PopupResizer">
        <Setter Property="Background" Value="{StaticResource LightForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PopupResizerBorderBrush}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:PopupResizer">
                    <Border Height="{TemplateBinding Height}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FlowDirections">
                                <VisualState x:Name="LTR" />
                                <VisualState x:Name="RTL">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNESW</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AboveLTR">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNESW</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AboveRTL">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNWSE</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Position">
                                <VisualState x:Name="Below" />
                                <VisualState x:Name="Above">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid x:Name="BelowPosition" Margin="0">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Grid.RenderTransform>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.ColumnSpan="2"
                                        Margin="0 -2 0 0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1" />

                                <Border x:Name="ResizeElem"
                                        Grid.Column="1"
                                        VerticalAlignment="Bottom"
                                        Background="{StaticResource TransparentBrush}"
                                        BorderThickness="1"
                                        Cursor="SizeNWSE">
                                    <Grid x:Name="BelowDots"
                                          Width="7"
                                          Height="7"
                                          Margin="0,0,2,2"
                                          VerticalAlignment="Bottom">
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   Margin="0,0,4,0"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{StaticResource LightForegroundBrush}" />
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{StaticResource LightForegroundBrush}" />
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   Margin="0,0,0,4"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{StaticResource LightForegroundBrush}" />
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   Margin="0,0,5,1"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{TemplateBinding BorderBrush}" />
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   Margin="0,0,1,1"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{TemplateBinding BorderBrush}" />
                                        <Rectangle Width="2"
                                                   Height="2"
                                                   Margin="0,0,1,5"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Bottom"
                                                   Fill="{TemplateBinding BorderBrush}" />
                                        <Rectangle x:Name="TouchableZone"
                                                   Grid.Column="1"
                                                   Margin="-20 -12 -12 -12"
                                                   Fill="{StaticResource TransparentBrush}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  XamMultiColumnComboEditor Style  *********************************  -->
    <Style x:Key="XamMultiColumnComboEditorStyle" TargetType="igShared:XamMultiColumnComboEditor">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:XamMultiColumnComboEditor">
                    <Grid>
                        <Grid.Resources>
                            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00">
                                                <SplineDoubleKeyFrame.Value>
                                                    <System:Double>1</System:Double>
                                                </SplineDoubleKeyFrame.Value>
                                            </SplineDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ModeStates">
                                <VisualState x:Name="Selectable" />
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectContentPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButton" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>2</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WaterMarkStates">
                                <VisualState x:Name="WaterMarkHidden" />
                                <VisualState x:Name="WaterMarkVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PositionStates">
                                <VisualState x:Name="Below" />
                                <VisualState x:Name="Above">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <igPrimBase:ResizerPosition>Above</igPrimBase:ResizerPosition>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>0</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootPopupElement" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>1</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder" Background="{TemplateBinding Background}">
                            <Grid x:Name="gridLayout" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="Popup"
                                       Grid.ColumnSpan="2"
                                       VerticalAlignment="Bottom"
                                       IsOpen="False"
                                       Style="{StaticResource PopupStyle}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border x:Name="RootPopupElement"
                                                Height="Auto"
                                                MinHeight="40"
                                                MaxWidth="{TemplateBinding MaxDropDownWidth}"
                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                HorizontalAlignment="Stretch"
                                                Background="{StaticResource LightForegroundBrush}"
                                                BorderBrush="{StaticResource PopupResizerBorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{StaticResource ComboPopoutRadius}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <igPrimBase:MultiColumnComboItemsPanel x:Name="ItemsPanel"
                                                                                       Grid.Row="1"
                                                                                       VerticalAlignment="Top" />
                                                <ScrollBar x:Name="VerticalScrollBar"
                                                           Grid.Row="1"
                                                           Grid.Column="1"
                                                           Style="{StaticResource ScrollBarStyle}" />
                                                <ScrollBar x:Name="HorizontalScrollBar"
                                                           Grid.Row="2"
                                                           Grid.Column="0"
                                                           Height="20"
                                                           Style="{StaticResource ScrollBarStyle}" />
                                                <ContentControl x:Name="FooterContentArea"
                                                                Grid.Row="3"
                                                                Grid.ColumnSpan="2"
                                                                HorizontalContentAlignment="Stretch"
                                                                Content="{TemplateBinding Footer}"
                                                                ContentTemplate="{TemplateBinding FooterTemplate}" />
                                            </Grid>
                                        </Border>
                                        <igPrimBase:PopupResizer x:Name="Resizer"
                                                                 Grid.Row="1"
                                                                 Grid.ColumnSpan="2"
                                                                 Popup="{Binding ElementName=Popup}"
                                                                 ResizeElement="{Binding ElementName=RootPopupElement}"
                                                                 Style="{StaticResource PopupResizerStyle}"
                                                                 Visibility="{Binding AllowDropDownResizing,
                                                                                      Converter={StaticResource boolToVisibility},
                                                                                      RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Popup>
                                <TextBlock x:Name="WaterMark"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           IsHitTestVisible="False"
                                           Padding="{TemplateBinding Padding}"
                                           Text="{TemplateBinding EmptyText}"
                                           Visibility="Collapsed" />
                                <igPrimBase:SpecializedTextBox x:Name="TextBoxPresenter"
                                                               Margin="1,1,0,1"
                                                               HorizontalAlignment="Stretch"
                                                               Background="{StaticResource TransparentBrush}"
                                                               BorderThickness="0"
                                                               Foreground="{TemplateBinding Foreground}"
                                                               IsTabStop="{TemplateBinding IsTabStop}"
                                                               Style="{StaticResource SpecializedTextBoxStyle}"
                                                               Visibility="Collapsed" />
                                <StackPanel x:Name="MultiSelectContentPanel"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Orientation="Horizontal" />
                                <ToggleButton x:Name="ToggleButton"
                                              Grid.Column="1"
                                              Width="{StaticResource ToggleButtonWidth}"
                                              BorderBrush="Transparent"
                                              IsChecked="{Binding IsDropDownOpen,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              IsTabStop="False"
                                              Style="{StaticResource ComboBoxToggleButtonStyle}"
                                              igPrimBase:XamlHelper.Focusable="False" />
                                <Button Grid.Column="1"
                                        Width="30"
                                        Height="30"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Background="{StaticResource ClearSelectionBackgroundBrush}"
                                        ClickMode="Press"
                                        Cursor="Hand"
                                        IsEnabled="False"
                                        Template="{StaticResource CrossTemplate}"
                                        Visibility="{TemplateBinding SelectedItemsResetButtonVisibility}"
                                        igPrimBase:XamlHelper.Focusable="False">
                                    <igShared:Commanding.Command>
                                        <igPrimBase:MultiColumnComboEditorCommandSource CommandType="ClearSelection" EventName="Click" />
                                    </igShared:Commanding.Command>
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding LocalizedStrings[SelectedItemsResetButton_ToolTip], RelativeSource={RelativeSource TemplatedParent}}" />
                                    </ToolTipService.ToolTip>
                                </Button>

                            </Grid>
                        </Border>
                        <Border x:Name="borderEditMode"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource ComboTextBoxRadius}"
                                Visibility="Collapsed" />

                        <Rectangle x:Name="FocusVisualElement"
                                   Grid.ColumnSpan="2"
                                   Margin="0"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   RadiusX="{StaticResource ComboRadius}"
                                   RadiusY="{StaticResource ComboRadius}"
                                   Stroke="{StaticResource TextBoxBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   IsHitTestVisible="false"
                                   Opacity="0"
                                   RadiusX="{StaticResource ComboRadius}"
                                   RadiusY="{StaticResource ComboRadius}" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="1"
                                CornerRadius="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Width="12"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="{StaticResource TransparentBrush}">
                                <Path Margin="1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}" />
                                <Path Margin="1,3,0,0"
                                      Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource LightForegroundBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource XamMultiColumnComboEditorStyle}" TargetType="igShared:XamMultiColumnComboEditor" />

    <!--  *********************************  ComboHeaderCellControl Style  *********************************  -->
    <Style x:Key="ComboHeaderCellControlStyle" TargetType="igShared:ComboHeaderCellControl">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource HeaderForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderThickness}" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:ComboHeaderCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd_Hover" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="Bd_Hover"
                                   Fill="{StaticResource HeaderHoverBackgroundBrush}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{StaticResource ComboCellBorderMouseOverThickness}"
                                   Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ComboHeaderCellControlStyle}" TargetType="igShared:ComboHeaderCellControl" />

    <!--  *********************************  ComboCellControl Style  *********************************  -->
    <Style x:Key="ComboCellControlStyle" TargetType="igShared:ComboCellControl">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderThickness}" />
        <Setter Property="Padding" Value="10 4" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:ComboCellControl">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="mouseOverRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ContentControl"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="mouseOverRectangle"
                                   Fill="{StaticResource CellItemHoverBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource CellItemHoverBorderBrush}"
                                   StrokeThickness="{StaticResource ComboCellBorderMouseOverThickness}" />
                        <Rectangle x:Name="selectedRectangle"
                                   Fill="{StaticResource CellItemSelectedBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource CellItemSelectedBorderBrush}"
                                   StrokeThickness="{StaticResource ComboCellBorderSelectedThickness}" />
                        <Border x:Name="FocusVisualElement"
                                Background="{StaticResource CellItemFocusBackgroundBrush}"
                                BorderBrush="{StaticResource CellItemFocusBorderBrush}"
                                BorderThickness="{StaticResource ComboCellBorderFocusThickness}"
                                Visibility="Collapsed" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ComboCellControlStyle}" TargetType="igShared:ComboCellControl" />

    <!--  *********************************  RowSelectionCheckBoxCellControl Style  *********************************  -->
    <Style x:Key="RowSelectionCheckBoxCellControlStyle" TargetType="igShared:RowSelectionCheckBoxCellControl">
        <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboCellBorderThickness}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:RowSelectionCheckBoxCellControl">
                    <Grid Background="{TemplateBinding Background}">
                        <CheckBox x:Name="Checkbox"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RowSelectionCheckBoxCellControlStyle}" TargetType="igShared:RowSelectionCheckBoxCellControl" />

    <!--  *********************************  RowSelectionCheckBoxHeaderCellControl Style  *********************************  -->
    <Style x:Key="RowSelectionCheckBoxHeaderCellControlStyle" TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
        <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igShared:RowSelectionCheckBoxHeaderCellControl">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RowSelectionCheckBoxHeaderCellControlStyle}" TargetType="igShared:RowSelectionCheckBoxHeaderCellControl" />

    <!--  *********************************  HighlightingTextBlock Style  *********************************  -->
    <Style x:Key="HighlightingTextBlockStyle" TargetType="igControlsPrim:HighlightingTextBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igControlsPrim:HighlightingTextBlock">
                    <Grid>
                        <TextBlock x:Name="TextBlock" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource HighlightingTextBlockStyle}" TargetType="igControlsPrim:HighlightingTextBlock" />
</ResourceDictionary>