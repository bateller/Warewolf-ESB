<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igDock="http://infragistics.com/DockManager"
                    xmlns:igThemes="http://infragistics.com/Themes"
                    xmlns:igWinThemes="http://infragistics.com/Themes"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
                    xmlns:luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Colors.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Brushes.xaml" />
        <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Common/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  ========== Converters ==========  -->
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    <!--  AS 6/29/10 TFS32553  -->
    <igDock:ContentValidationConverter x:Key="contentValidationConverter" ErrorMessage="{x:Static igDock:Resources.PaneHeaderContentValidationError}" />

    <!--  ========== ToolTips ==========  -->
    <!--
        AS 2/13/09 TFS14003 - Added x:Shared="false" so each element has its
        own reference. otherwise the shared tooltip (or the deferredresourcereference
        that wpf uses) causes the elements that used it to be rooted
    -->
    <!--  Dev2  -->
    <ToolTip x:Key="closeToolTip"
             Content="Close"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="pinToolTip"
             Content="Toggle pin on/off"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="positionToolTip"
             Content="Position"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="filesToolTip"
             Content="Show files"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="showNavigatorToolTip"
             Content="Show navigator"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  Dev2  -->
    <ToolTip x:Key="minimizeToolTip"
             Content="Minimize"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="maximizeToolTip"
             Content="Maximize"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="restoreUpToolTip"
             Content="Restore up"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />
    <ToolTip x:Key="restoreDownToolTip"
             Content="Restore down"
             Style="{DynamicResource {x:Static igDock:XamDockManager.ToolTipStyleKey}}"
             x:Shared="false" />

    <!--  ========== Repeat Buttons ==========  -->
    <Style x:Key="ScrollLeftButtonStyle"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="XamPagerButton"
                          Width="Auto"
                          Height="Auto"
                          Margin="1,1,1,1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Border x:Name="Background"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="2,0,0,2"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="Highlight"
                                Margin="1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="1"
                                CornerRadius="2,0,0,2"
                                SnapsToDevicePixels="True" />
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          RenderTransformOrigin="0.5,0.5"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollRightButtonStyle"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="XamPagerButton"
                          Width="Auto"
                          Height="Auto"
                          Margin="1,1,1,1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Border x:Name="Background"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="0,2,2,0"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="Highlight"
                                Margin="1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="1"
                                CornerRadius="0,2,2,0"
                                SnapsToDevicePixels="True" />
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          RenderTransformOrigin="0.5,0.5"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollUpButtonStyle"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="XamPagerButton"
                          Width="Auto"
                          Height="Auto"
                          Margin="1,1,1,1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Border x:Name="Background"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="2,2,0,0"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="Highlight"
                                Margin="1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="1"
                                CornerRadius="2,2,0,0"
                                SnapsToDevicePixels="True" />
                        <ContentPresenter Margin="0,4,0,4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollDownButtonStyle"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="XamPagerButton"
                          Width="Auto"
                          Height="Auto"
                          Margin="1,1,1,1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Border x:Name="Background"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="0,0,2,2"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="Highlight"
                                Margin="1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="1"
                                CornerRadius="0,0,2,2"
                                SnapsToDevicePixels="True" />
                        <ContentPresenter Margin="0,5,0,4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          RenderTransformOrigin="0.5,0.5"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->
    <!--  Shared Values [Start]  -->
    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->

    <!--  ========== TabGroupXamPagerStyle ==========  -->
    <Style x:Key="TabGroupXamPagerStyle" TargetType="{x:Type igWindows:XamPager}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:XamPager}">
                    <DockPanel Background="{TemplateBinding Background}">
                        <RepeatButton x:Name="PART_ScrollRight"
                                      Command="{x:Static ScrollBar.LineRightCommand}"
                                      CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                      DockPanel.Dock="Right"
                                      Style="{StaticResource ScrollRightButtonStyle}"
                                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                            <Path Width="3"
                                  Height="5"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,0L0,5 3,2.5z"
                                  Fill="#000000"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </RepeatButton>
                        <RepeatButton x:Name="PART_ScrollLeft"
                                      Command="{x:Static ScrollBar.LineLeftCommand}"
                                      CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                      DockPanel.Dock="Right"
                                      Style="{StaticResource ScrollLeftButtonStyle}"
                                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                            <Path Width="3"
                                  Height="5"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M3,0L3,5 0,2.5z"
                                  Fill="#000000"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </RepeatButton>
                        <RepeatButton x:Name="PART_ScrollDown"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                      DockPanel.Dock="Bottom"
                                      Style="{StaticResource ScrollDownButtonStyle}"
                                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <Path Width="5"
                                  Height="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,0L5,0 2.5,3z"
                                  Fill="#000000"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </RepeatButton>
                        <RepeatButton x:Name="PART_ScrollUp"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                      DockPanel.Dock="Bottom"
                                      Style="{StaticResource ScrollUpButtonStyle}"
                                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <Path Width="5"
                                  Height="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,2.5L5,2.5 2.5,0z"
                                  Fill="#000000"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </RepeatButton>
                        <igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter"
                                                         Margin="{TemplateBinding Padding}"
                                                         CanContentScroll="{TemplateBinding CanContentScroll}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== SimpleContentControl ==========  -->
    <!--  Basic control template for buttons in the dockmanager  -->
    <ControlTemplate x:Key="SimpleContentControlTemplate" TargetType="{x:Type ContentControl}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding Border.CornerRadius}"
                SnapsToDevicePixels="True">


            <Path Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Data="{Binding Path=Content,
                                 RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                  Fill="{TemplateBinding Foreground}"
                  SnapsToDevicePixels="True"
                  Stretch="Uniform" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ========== SimpleMenuItem ==========  -->
    <!--  Basic control template for root menu items in the dockmanager  -->
    <ControlTemplate x:Key="SimpleMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <igWindows:CardPanel>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                    SnapsToDevicePixels="True">
                <!--  <ContentPresenter />  -->
                <Path Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Data="{Binding Path=Header,
                                     RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                      Fill="{TemplateBinding Foreground}"
                      SnapsToDevicePixels="True"
                      Stretch="Uniform" />
            </Border>


            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   IsOpen="{Binding Path=IsSubmenuOpen,
                                    RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                    <Grid x:Name="MenuItem"
                          Width="Auto"
                          Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="27" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2"
                                   Margin="0,0,0,0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                   Opacity="1"
                                   SnapsToDevicePixels="True"
                                   Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                   StrokeThickness="1" />

                        <!--
                            Harry 03.20.2008
                            Created icon area background template and moved
                            it to the MenuItem.SubMenuItemStyleKey
                        -->

                        <!--
                            <Border Grid.ColumnSpan="1"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            BorderThickness="0,0,1,0"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}"
                            Margin="3,3,0,3"
                            SnapsToDevicePixels="True" />
                        -->

                        <ScrollViewer Grid.ColumnSpan="2"
                                      Margin="3"
                                      CanContentScroll="True"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                    TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Grid>
                </luna:SystemDropShadowChrome>
            </Popup>
        </igWindows:CardPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ========== ButtonStyleBase ==========  -->
    <!--  Base style for the buttons in the PaneHeaderPresenter and document TabGroupPane  -->
    <Style x:Key="ButtonStyleBase" TargetType="{x:Type Button}">
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource SimpleContentControlTemplate}" />
    </Style>


    <!--  ========== CaptionButtonStyleBase ==========  -->
    <!--  Base style for the buttons in the PaneHeaderPresenter  -->
    <Style x:Key="CaptionButtonStyleBase"
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Style.Triggers>

            <!--  HotTracked Button in an Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="False" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </MultiDataTrigger>


            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
            </Trigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>

        </Style.Triggers>
    </Style>


    <!--  ========== RootMenuStyle ==========  -->
    <!--  Style for the root level menu containing a single menu item in the PaneHeaderPresenter and document TabGroupPane  -->
    <Style x:Key="RootMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <igWindows:CardPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ========== TopLevelHeaderMenuItemStyleBase ==========  -->
    <!--  Base style for the root level menu items in the PaneHeaderPresenter and document TabGroupPane  -->
    <Style x:Key="TopLevelHeaderMenuItemStyleBase" TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <!--
            AS 4/22/08 Allow the menu item to be focusable so it can be navigated with the keyboard.
            <Setter Property="Focusable" Value="False" />
        -->
        <!--  AS 4/23/08 We don't want the element to receive focus unless explicitly set.  -->
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource SimpleMenuItemTemplate}" />
    </Style>


    <!--  ========== MenuItem_IconAreaBackground ==========  -->
    <Style x:Key="MenuItem_IconAreaBackground" TargetType="{x:Type Border}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
    </Style>


    <!--  ========== SubMenuItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:XamDockManager.SubMenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid Background="Red">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="iconColumn"
                                      Width="Auto"
                                      MinWidth="27"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border x:Name="IconAreaBackground" Style="{StaticResource MenuItem_IconAreaBackground}" />

                <!--  MenuItem Highlight  -->
                <Grid x:Name="Highlight"
                      Grid.ColumnSpan="2"
                      Margin="1,0,1,0"
                      Visibility="Collapsed">
                    <Border x:Name="CenterAndBorderFill"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionOuterBorderFillKey}}"
                            BorderThickness="1"
                            CornerRadius="3"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="InnerBorderFill"
                               Margin="1"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionInnerBorderFillKey}}"
                               StrokeThickness="1" />
                </Grid>

                <!--  Icon  -->
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />

                <!--  CheckMark  -->
                <Grid x:Name="CheckMark" Visibility="Collapsed">
                    <Border x:Name="CheckMarkBox"
                            Width="20"
                            Height="20"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalOuterBorderFillKey}}"
                            BorderThickness="1,1,1,1"
                            SnapsToDevicePixels="True">

                        <Path x:Name="CheckMarkGlyph"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                              Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}"
                              FlowDirection="LeftToRight"
                              SnapsToDevicePixels="True" />

                    </Border>
                </Grid>


                <!--  ContentArea  -->
                <Grid Grid.Column="1" VerticalAlignment="Center">
                    <ContentPresenter Margin="8,4,8,4" ContentSource="Header" />
                </Grid>

            </Grid>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionHottrackTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsHighlighted" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CheckMarkBox" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}" />
                <Setter TargetName="CheckMarkBox" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackOuterBorderFillKey}}" />
            </MultiTrigger>



            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ========== NoTabItemAreaTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="NoTabItemAreaTabGroupTemplate" TargetType="{x:Type igDock:TabGroupPane}">
        <Grid>
            <!--  We need the itemspresenter to generate the elements  -->
            <ItemsPresenter MaxWidth="1"
                            MaxHeight="1"
                            Visibility="Hidden" />
            <ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="{TemplateBinding Padding}"
                              Content="{TemplateBinding SelectedContent}"
                              ContentSource="SelectedContent"
                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
    </ControlTemplate>


    <!--  ========== centerIndicator ==========  -->
    <ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
        <!--
            Note: I'm using the root element as the center to be a catch all so we don't have
            to put the corners and center portion into a single element.
        -->
        <Grid x:Name="PART_DockCenter">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="34" />
                <ColumnDefinition Width="39" />
                <ColumnDefinition Width="34" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="34" />
                <RowDefinition Height="37" />
                <RowDefinition Height="34" />
            </Grid.RowDefinitions>


            <!--  IndicatorGroupBackground  -->
            <Grid x:Name="IndicatorGroupBackground"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="3"
                  Width="77"
                  Height="75"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Opacity="0.75">
                <Rectangle Margin="0,0,0,0"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                           Opacity="1"
                           RadiusX="12"
                           RadiusY="12"
                           SnapsToDevicePixels="True" />
                <Rectangle Margin="2,2,2,2"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                           Opacity="1"
                           RadiusX="11"
                           RadiusY="12"
                           SnapsToDevicePixels="True"
                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
                           StrokeThickness="1" />
                <Rectangle Margin="3,3,3,3"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Opacity="1"
                           RadiusX="11"
                           RadiusY="11"
                           SnapsToDevicePixels="True"
                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                           StrokeThickness="1" />
            </Grid>


            <!--  Top Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockTop"
                                 Grid.Row="0"
                                 Grid.Column="1"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="topIndicatorIcon"
                      Width="35"
                      Height="34"
                      IsEnabled="{TemplateBinding CanDockTop}">
                    <Border x:Name="topIndicatorIconShadow"
                            Margin="0,0,0,17"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                            CornerRadius="4,4,0,0"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="topIndicatorIconCenterAndOuterBorder"
                               Margin="2,2,2,0"
                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                               RadiusX="3"
                               RadiusY="3"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" />
                    <Rectangle x:Name="topIndicatorIconInnerBorder"
                               Margin="3,3,3,1"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" />
                    <Path Width="7"
                          Height="12"
                          Margin="0,0,0,4"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Bottom"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Path.LayoutTransform>
                    </Path>
                    <Path Width="5"
                          Height="10"
                          Margin="0,0,0,5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Bottom"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Path.LayoutTransform>
                    </Path>
                </Grid>
            </igWindows:CardPanel>


            <!--  Bottom Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockLeft"
                                 Grid.Row="1"
                                 Grid.Column="0"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="leftIndicatorIcon"
                      Width="34"
                      Height="35"
                      IsEnabled="{TemplateBinding CanDockLeft}">
                    <Border x:Name="leftIndicatorIconShadow"
                            Margin="0,0,17,0"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                            CornerRadius="4,0,0,4"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="leftIndicatorIconCenterAndOuterBorder"
                               Margin="2,2,0,2"
                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                               RadiusX="3"
                               RadiusY="3"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" />
                    <Rectangle x:Name="leftIndicatorIconInnerBorder"
                               Margin="3,3,1,3"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" />
                    <Path Width="7"
                          Height="12"
                          Margin="0,0,4,0"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                          Opacity="1"
                          Stretch="Fill" />
                    <Path Width="5"
                          Height="10"
                          Margin="0,0,5,0"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"
                          Opacity="1"
                          Stretch="Fill" />
                </Grid>
            </igWindows:CardPanel>


            <!--  Right Indicator  -->
            <igWindows:CardPanel x:Name="center"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Background="Transparent"
                                 IsHitTestVisible="False"
                                 Opacity="0.75">
                <Grid Width="31"
                      Height="30"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsEnabled="{TemplateBinding CanDockCenter}">
                    <Path Width="8"
                          Height="4"
                          Margin="21,26,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Data="M 21,26 C21,26 21,28.625 21,28.625 21,29.3843994140625 21.44769287109375,30 22,30 22,30 27.1875,30 27.1875,30 27.73980712890625,30 29,29.0718994140625 29,28.3125 29,28.3125 29,26 29,26 29,26 21,26 21,26 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
                          Opacity="1"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
                          StrokeThickness="1" />
                    <Path Width="9"
                          Height="4"
                          Margin="13,26,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Data="M 13,26 C13,26 13,28.625 13,28.625 13,29.3843994140625 13.503662109375,30 14.125,30 14.125,30 20.875,30 20.875,30 21.496337890625,30 22,29.3843994140625 22,28.625 22,28.625 22,26 22,26 22,26 13,26 13,26 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
                          Opacity="1"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
                          StrokeThickness="1" />
                    <Path x:Name="centerIndicatorIconCenterAndOuterBorder"
                          Width="31"
                          Height="30"
                          Margin="0,0,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Data="M 2.70001220703125,0 C1.20880126953125,0 0,1.20880126953125 0,2.70001220703125 0,2.70001220703125 0,28.375 0,28.375 0,29.2724609375 0.7275390625,30 1.625,30 1.625,30 11.375,30 11.375,30 12.2724609375,30 13,29.2724609375 13,28.375 13,28.375 13,27 13,27 13,27 28.29998779296875,27 28.29998779296875,27 29.79119873046875,27 31,25.79119873046875 31,24.29998779296875 31,24.29998779296875 31,2.70001220703125 31,2.70001220703125 31,1.20880126953125 29.79119873046875,0 28.29998779296875,0 28.29998779296875,0 2.70001220703125,0 2.70001220703125,0 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                          Opacity="1"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}"
                          StrokeThickness="1" />
                    <Path Width="29"
                          Height="28"
                          Margin="1,1,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Data="M 3.52581787109375,1 C2.13079833984375,1 1,2.12823486328125 1,3.52001953125 1,3.52001953125 1,27.48333740234375 1,27.48333740234375 1,28.320953369140625 1.68060302734375,29 2.5201416015625,29 2.5201416015625,29 11.64111328125,29 11.64111328125,29 12.480712890625,29 13.161285400390625,26.20001220703125 13.161285400390625,26.20001220703125 13.161285400390625,26.20001220703125 27.47418212890625,26.20001220703125 27.47418212890625,26.20001220703125 28.869140625,26.20001220703125 30,25.07177734375 30,23.67999267578125 30,23.67999267578125 30,3.52001953125 30,3.52001953125 30,2.12823486328125 28.869140625,1 27.47418212890625,1 27.47418212890625,1 3.52581787109375,1 3.52581787109375,1 z"
                          Opacity="1"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}"
                          StrokeThickness="1" />
                </Grid>


            </igWindows:CardPanel>
            <igWindows:CardPanel x:Name="PART_DockRight"
                                 Grid.Row="1"
                                 Grid.Column="2"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="rightIndicatorIcon"
                      Width="34"
                      Height="35"
                      IsEnabled="{TemplateBinding CanDockRight}">
                    <Border x:Name="rightIndicatorIconShadow"
                            Margin="17,0,0,0"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                            CornerRadius="0,4,4,0"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="rightIndicatorIconCenterAndOuterBorder"
                               Margin="0,2,2,2"
                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                               RadiusX="3"
                               RadiusY="3"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" />
                    <Rectangle x:Name="rightIndicatorIconInnerBorder"
                               Margin="1,3,3,3"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" />
                    <Path Width="7"
                          Height="12"
                          Margin="4,0,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </Path.LayoutTransform>
                    </Path>
                    <Path Width="5"
                          Height="10"
                          Margin="5,0,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </Path.LayoutTransform>
                    </Path>
                </Grid>
            </igWindows:CardPanel>

            <!--  Center Indicator  -->
            <igWindows:CardPanel x:Name="PART_DockBottom"
                                 Grid.Row="2"
                                 Grid.Column="1"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="bottomIndicatorIcon"
                      Width="35"
                      Height="34"
                      IsEnabled="{TemplateBinding CanDockBottom}">
                    <Border x:Name="bottomIndicatorIconShadow"
                            Margin="0,17,0,0"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                            CornerRadius="0,0,4,4"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="bottomIndicatorIconCenterAndOuterBorder"
                               Margin="2,0,2,2"
                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}}"
                               RadiusX="3"
                               RadiusY="3"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}}" />
                    <Rectangle x:Name="bottomIndicatorIconInnerBorder"
                               Margin="3,1,3,3"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}}" />
                    <Path Width="7"
                          Height="12"
                          Margin="0,4,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="-90" />
                        </Path.LayoutTransform>
                    </Path>
                    <Path Width="5"
                          Height="10"
                          Margin="0,5,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top"
                          Data="M 19,8 C19,8 19,15 19,15 19,15 15.5,11.5 15.5,11.5 15.5,11.5 19,8 19,8 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}}"
                          Opacity="1"
                          Stretch="Fill">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="-90" />
                        </Path.LayoutTransform>
                    </Path>
                </Grid>
            </igWindows:CardPanel>


            <!--  Left Indicator  -->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HotTrackPosition" Value="Center">
                <Setter TargetName="IndicatorGroupBackground" Property="Opacity" Value="1" />
                <Setter TargetName="center" Property="Opacity" Value="1" />
                <Setter TargetName="centerIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
                <Setter TargetName="centerIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
            </Trigger>
            <Trigger Property="HotTrackPosition" Value="Left">
                <Setter TargetName="PART_DockLeft" Property="Opacity" Value="1" />
                <Setter TargetName="leftIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
                <Setter TargetName="leftIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
                <Setter TargetName="leftIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
            </Trigger>
            <Trigger Property="HotTrackPosition" Value="Right">
                <Setter TargetName="PART_DockRight" Property="Opacity" Value="1" />
                <Setter TargetName="rightIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
                <Setter TargetName="rightIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
                <Setter TargetName="rightIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
            </Trigger>
            <Trigger Property="HotTrackPosition" Value="Top">
                <Setter TargetName="PART_DockTop" Property="Opacity" Value="1" />
                <Setter TargetName="topIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
                <Setter TargetName="topIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
                <Setter TargetName="topIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
            </Trigger>
            <Trigger Property="HotTrackPosition" Value="Bottom">
                <Setter TargetName="PART_DockBottom" Property="Opacity" Value="1" />
                <Setter TargetName="bottomIndicatorIconCenterAndOuterBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}}" />
                <Setter TargetName="bottomIndicatorIconCenterAndOuterBorder" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}}" />
                <Setter TargetName="bottomIndicatorIconInnerBorder" Property="Stroke" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ========== dropPreviewTabBottom ==========  -->
    <ControlTemplate x:Key="dropPreviewTabBottom" TargetType="{x:Type Control}">
        <Grid>
            <Grid.RowDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="4*" MaxHeight="24" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="3,3,3,0" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="6" />
                    <ColumnDefinition Width="10*" MaxWidth="46" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,3,0,0" />
                <Border Grid.Column="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,3,3" />
                <Border Grid.Column="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,3,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>


    <!--  ========== dropPreviewTabTop ==========  -->
    <ControlTemplate x:Key="dropPreviewTabTop" TargetType="{x:Type Control}">
        <Grid>
            <Grid.RowDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="4*" MaxHeight="24" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="6" />
                    <ColumnDefinition Width="10*" MaxWidth="46" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,3" />
                <Border Grid.Column="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,3,3,0" />
                <Border Grid.Column="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,3" />
            </Grid>
            <Border Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="3,0,3,3" />
        </Grid>
    </ControlTemplate>


    <!--  ========== dropPreviewTabRight ==========  -->
    <ControlTemplate x:Key="dropPreviewTabRight" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="3,3,0,3" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MaxHeight="6" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,3,3,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>


    <!--  ========== dropPreviewTabLeft ==========  -->
    <ControlTemplate x:Key="dropPreviewTabLeft" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" MaxHeight="6" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,3,0,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
            </Grid>
            <Border Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,3,3,3" />
        </Grid>
    </ControlTemplate>


    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->
    <!--  Shared Values [End]  -->
    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->




    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->
    <!--  ResourceKey Templates [Start]  -->
    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->


    <!--  ========== DockableTabItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DockableTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border x:Name="ctrlBorder" SnapsToDevicePixels="true">
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <!--  AS 1/6/10 TFS25270 - TemplateBind the background and borderbrush instead of setting here and in triggers for base color.  -->
                        <Border x:Name="Border"
                                Margin="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,1"
                                SnapsToDevicePixels="True" />
                        <Rectangle x:Name="CurvedEdgesEffect"
                                   Height="1"
                                   Margin="0,0,0,0"
                                   VerticalAlignment="Top"
                                   Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}"
                                   SnapsToDevicePixels="True"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="firstTabCloseGap"
                                   Width="1"
                                   Height="4"
                                   Margin="0,-3,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}}"
                                   SnapsToDevicePixels="True"
                                   Stroke="{x:Null}"
                                   Visibility="Collapsed" />
                        <Border x:Name="HighlightBorder"
                                Margin="1,0,1,1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="1,0,1,1"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                    <DockPanel x:Name="contentPanel">
                        <igWindows:AutoDisabledImage x:Name="image"
                                                     Margin="0,0,2,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Path=Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Path=Pane.HasImage,
                                                                          Converter={StaticResource BoolToVisConverter},
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <ContentPresenter x:Name="contentHeader"
                                          HorizontalAlignment="{Binding Path=HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding Path=VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />
                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,2,0,0" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,0,-1,0" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTopCenterFillKey}}"/>
                -->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="HighlightBorder" Property="Margin" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,0,2" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,1,4,3" />
                <Setter Property="Margin" Value="0,0,-1,0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="2,0,0,0" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,-1,0,0" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveLeftCenterFillKey}}"/>
                -->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="CurvedEdgesEffect" Property="HorizontalAlignment" Value="Right" />
                <Setter TargetName="CurvedEdgesEffect" Property="Height" Value="Auto" />
                <Setter TargetName="CurvedEdgesEffect" Property="Width" Value="1" />
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="HighlightBorder" Property="Margin" Value="1,1,0,1" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,2,0" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,4,1" />
                <Setter Property="Margin" Value="0,0,0,-1" />
                <Setter TargetName="Border" Property="BorderThickness" Value="0,1,1,1" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveRightCenterFillKey}}"/>
                -->
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="CurvedEdgesEffect" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="CurvedEdgesEffect" Property="Height" Value="Auto" />
                <Setter TargetName="CurvedEdgesEffect" Property="Width" Value="1" />
                <Setter TargetName="HighlightBorder" Property="BorderThickness" Value="0,1,1,1" />
                <Setter TargetName="HighlightBorder" Property="Margin" Value="0,1,1,1" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="CurvedEdgesEffect" Property="Visibility" Value="Visible" />
                <Setter TargetName="HighlightBorder" Property="Visibility" Value="Collapsed" />
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveOuterBorderFillKey}}" />
            </Trigger>

            <!--  ==================== IsMouseOverTab + TabStripPlacement ====================  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTopCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackLeftCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackRightCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>


            <!--  ==================== IsSelected + TabStripPlacement ====================  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
                <Setter Property="Margin" Value="-1,-1,-2,-2" />
                <Setter Property="Padding" Value="4,0,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTopCenterFillKey}}" />
                <Setter Property="Margin" Value="-1,-2,-2,-1" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveLeftCenterFillKey}}" />
                <Setter Property="Margin" Value="-2,-2,-1,-1" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveRightCenterFillKey}}" />
                <Setter Property="Margin" Value="-1,-1,-2,-2" />
                <Setter Property="Padding" Value="4,3,5,0" />
            </MultiTrigger>


            <!--  ========== If this is the First Tab in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,1,5,3" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,1,5,3" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,1" />
                <Setter Property="Margin" Value="-2,0,-1,0" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="0,-1,0,-2" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="0,-2,0,-1" />
            </MultiTrigger>




            <!--  ========== If this is the First Tab and Selected in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,0,5,0" />
                <Setter Property="Margin" Value="-2,-1,-1,-2" />
                <Setter TargetName="firstTabCloseGap" Property="Visibility" Value="Visible" />
                <Setter TargetName="CurvedEdgesEffect" Property="Visibility" Value="Visible" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-2,-2,-1,-1" />
                <Setter TargetName="firstTabCloseGap" Property="Visibility" Value="Visible" />
                <Setter TargetName="firstTabCloseGap" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="firstTabCloseGap" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="firstTabCloseGap" Property="Margin" Value="0,0,0,-2" />
                <Setter TargetName="firstTabCloseGap" Property="Width" Value="1" />
                <Setter TargetName="firstTabCloseGap" Property="Height" Value="4" />
                <Setter TargetName="CurvedEdgesEffect" Property="Visibility" Value="Visible" />
                <Setter TargetName="CurvedEdgesEffect" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="CurvedEdgesEffect" Property="Margin" Value="1,0,0,0" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-2,-1,-1,-2" />
                <Setter TargetName="firstTabCloseGap" Property="Visibility" Value="Visible" />
                <Setter TargetName="firstTabCloseGap" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="firstTabCloseGap" Property="HorizontalAlignment" Value="Right" />
                <Setter TargetName="firstTabCloseGap" Property="Height" Value="1" />
                <Setter TargetName="firstTabCloseGap" Property="Width" Value="3" />
                <Setter TargetName="firstTabCloseGap" Property="Margin" Value="0,0,-2,0" />
                <Setter TargetName="CurvedEdgesEffect" Property="Margin" Value="0,0,0,1" />
                <Setter TargetName="CurvedEdgesEffect" Property="Visibility" Value="Visible" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="3,3,5,0" />
                <Setter Property="Margin" Value="-1,-2,-2,-1" />
                <Setter TargetName="firstTabCloseGap" Property="Visibility" Value="Visible" />
                <Setter TargetName="firstTabCloseGap" Property="Margin" Value="-2,0,0,0" />
                <Setter TargetName="firstTabCloseGap" Property="VerticalAlignment" Value="Top" />
                <Setter TargetName="firstTabCloseGap" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="firstTabCloseGap" Property="Height" Value="1" />
                <Setter TargetName="firstTabCloseGap" Property="Width" Value="3" />
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTextFillKey}}" />
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== DocumentTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DocumentTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border x:Name="Background" Margin="0,0,-10,0">
            <Grid x:Name="TabbedDocumentTab"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="nonSelectedEnd">
                    <Path x:Name="nonSelectedOuterBorderSlice"
                          Height="Auto"
                          Margin="0,2,0,0"
                          VerticalAlignment="Stretch"
                          Data="M 619,51 C619,51 616,51 616,51 608,51 606,54 606,54 606,54 594,66 594,66 594,66 619,66 619,66 619,66 619,51 619,51 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                          Opacity="1"
                          Stretch="Fill" />
                    <Path x:Name="nonSelectedInnerBorderSlice"
                          Height="Auto"
                          Margin="1,3,0,0"
                          VerticalAlignment="Stretch"
                          Data="M 619,52 C619,52 617,52 617,52 609,52 607,55 607,55 607,55 596,66 596,66 596,66 619,66 619,66 619,66 619,52 619,52 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveInnerBorderFillKey}}"
                          Opacity="1"
                          Stretch="Fill" />
                    <!--  AS 1/6/10 TFS25270 - TemplateBind to the background  -->
                    <Path x:Name="nonSelectedCenterSlice"
                          Height="Auto"
                          Margin="2,3,0,0"
                          VerticalAlignment="Stretch"
                          Data="M 619,52 C619,52 618,52 618,52 610,52 608,55 608,55 608,55 597,66 597,66 597,66 619,66 619,66 619,66 619,52 619,52 z"
                          Fill="{TemplateBinding Background}"
                          Opacity="1"
                          Stretch="Fill" />
                </Grid>

                <!--
                    AS 3/5/09 TFS14746
                    selectedEnd was 1 pixel taller than the nonSelectedEnd so I added a negative margin to shift down and offset that pixel
                    I also adjusted the margins for the paths within since they were taller & wider than the non-selected end
                -->
                <Grid x:Name="selectedEnd"
                      Margin="0,0,0,-1"
                      Visibility="Collapsed">
                    <Path x:Name="selectedOuterBorderSlice"
                          Margin="0,0,-3,0"
                          Data="M 490,65 C490,65 518,65 518,65 518,65 518,47 518,47 518,47 515,47 515,47 507,47 505,50 505,50 505,50 490,65 490,65 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}"
                          SnapsToDevicePixels="True"
                          Stretch="Fill" />
                    <Path x:Name="selectedInnerBorderSlice"
                          Margin="1,1,-3,0"
                          Data="M 518,48 C518,48 516,48 516,48 508,48 506,51 506,51 506,51 492,65 492,65 492,65 518,65 518,65 518,65 518,48 518,48 z"
                          Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}"
                          SnapsToDevicePixels="True"
                          Stretch="Fill" />
                    <!--
                        AS 1/6/10 TFS25270
                        TemplateBind to the background & changed margin from 0,1,-2,-2 to 0,1,-2,-1 since it was going too low
                    -->
                    <Path x:Name="selectedCenterSlice"
                          Margin="0,1,-2,-1"
                          Data="M 492,66 C492,66 518,66 518,66 518,66 518,48 518,48 518,48 517,48 517,48 509,48 507,51 507,51 507,51 492,66 492,66 z"
                          Fill="{TemplateBinding Background}"
                          SnapsToDevicePixels="True"
                          Stretch="Fill" />
                </Grid>

                <Border x:Name="HighlightBorder"
                        Grid.Column="1"
                        Grid.ColumnSpan="1"
                        Margin="0,2,0,0"
                        VerticalAlignment="Stretch"
                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveInnerBorderFillKey}}"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}}"
                        BorderThickness="0,1,1,0"
                        CornerRadius="0,3,0,0" />
                <!--  AS 1/6/10 TFS25270 - TemplateBind to the background  -->
                <Border x:Name="Border"
                        Grid.Column="1"
                        Margin="0,3,2,0"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0,1,0,0" />
                <Rectangle x:Name="activebrFiller"
                           Grid.Column="1"
                           Width="1"
                           Height="1"
                           Margin="0,0,1,-1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}"
                           Visibility="Collapsed" />

                <Border x:Name="Content"
                        Grid.Column="1"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <DockPanel x:Name="ContentDock"
                               Margin="-8,1,6,0"
                               VerticalAlignment="Bottom">
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Path=Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Path=Pane.HasImage,
                                                                          Converter={StaticResource BoolToVisConverter},
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <Grid x:Name="gdContent"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <ContentPresenter x:Name="NormalContent"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />

                            <ContentPresenter x:Name="NormalContentBold"
                                              Margin="-4,0,-3,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextElement.FontWeight="Bold"
                                              Visibility="Hidden"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />
                        </Grid>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

            <Trigger Property="IsMouseOverTab" Value="true">
                <Setter TargetName="nonSelectedOuterBorderSlice" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
                <Setter TargetName="nonSelectedInnerBorderSlice" Property="Fill" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}}" />
                <!--
                    AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                    <Setter Property="Fill" TargetName="nonSelectedCenterSlice" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />
                -->
                <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}" />
                <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}}" />
                <!--
                    AS 1/6/10 TFS25270
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}"  />
                -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="activebrFiller" Property="Visibility" Value="Visible" />
                <Setter TargetName="selectedEnd" Property="Visibility" Value="Visible" />
                <Setter TargetName="nonSelectedEnd" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}}" />
                <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}" />
                <!--
                    AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}"/>
                -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}" />
                <!--
                    AS 3/5/09 TFS14746
                    Since this element only is visible when selected we don't need to change the margin
                    so I moved this up into the margin property of the element and adjusted it with the other
                    elements.
                    <Setter Property="Margin" TargetName="selectedCenterSlice" Value="0,1,0,-2" />
                -->
                <Setter TargetName="HighlightBorder" Property="Margin" Value="-4,0,0,0" />
                <Setter TargetName="Border" Property="Margin" Value="-4,1,2,-2" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOverTab" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </MultiTrigger>

            <DataTrigger Binding="{Binding Path=Pane.IsActiveDocument, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter TargetName="NormalContent" Property="Visibility" Value="Hidden" />
                <Setter TargetName="NormalContentBold" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <!--  ========== TAB PLACEMENT : BOTTOM ==========  -->
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ContentDock" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : LEFT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : RIGHT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== DockableTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
        <DockPanel ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_HeaderArea"
                       Panel.ZIndex="1"
                       DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                <igWindows:XamPager x:Name="PART_TabItemScrollViewer"
                                    CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                    Style="{StaticResource TabGroupXamPagerStyle}">
                    <ItemsPresenter x:Name="PART_TabHeaderPanel"
                                    Margin="2,2,2,0"
                                    KeyboardNavigation.TabIndex="1" />
                </igWindows:XamPager>
            </DockPanel>
            <Border x:Name="ContentPanel"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    SnapsToDevicePixels="true"
                    Visibility="Visible">
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding SelectedContent}"
                                  ContentSource="SelectedContent"
                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="Padding" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="Padding" Value="0,0,0,2" />
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,2,0,2" />
                <Setter TargetName="PART_TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter TargetName="PART_TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="BorderThickness" Value="1,0,0,0" />
                <Setter Property="Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,2,2,2" />
                <Setter TargetName="PART_TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter TargetName="PART_TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="BorderThickness" Value="0,0,1,0" />
                <Setter Property="Padding" Value="0,0,2,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== DocumentTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
        <DockPanel ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_HeaderArea"
                       Panel.ZIndex="1"
                       DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                <DockPanel>
                    <Button x:Name="closeBtn"
                            Command="{x:Static igDock:TabGroupPane.CloseSelectedItemCommand}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}}" />
                    <Menu x:Name="filesMenu"
                          DockPanel.Dock="Right"
                          Style="{StaticResource RootMenuStyle}">
                        <MenuItem x:Name="PART_FilesMenuItem" Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}}" />
                    </Menu>
                    <!--  AS 9/10/09 TFS19267 - Added CommandParameter  -->
                    <Button x:Name="showNavigatorButton"
                            Command="{x:Static igDock:DockManagerCommands.ShowPaneNavigator}"
                            CommandParameter="{TemplateBinding igDock:XamDockManager.DockManager}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}}"
                            Visibility="Collapsed" />
                    <ItemsPresenter x:Name="PART_TabHeaderPanel"
                                    Margin="5,2,10,0"
                                    KeyboardNavigation.TabIndex="1" />
                </DockPanel>
            </DockPanel>
            <Border x:Name="ContentPanel"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    SnapsToDevicePixels="True"
                    Visibility="Visible">
                <Border x:Name="InnerBorder"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}}"
                        BorderThickness="1"
                        CornerRadius="1"
                        SnapsToDevicePixels="True">
                    <Border x:Name="ThickInnerBorder"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                            BorderThickness="2"
                            SnapsToDevicePixels="True">
                        <Border x:Name="InnerMostBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                </Border>
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>

            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="TabStripPlacement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="5,0,10,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,10,0,5" />
                <!--
                    AS 6/24/08 BR34248
                    <Setter Property="DockPanel.Dock" TargetName="closeBtn" Value="Top" />
                    <Setter Property="DockPanel.Dock" TargetName="filesMenu" Value="Top" />
                    <Setter Property="DockPanel.Dock" TargetName="showNavigatorButton" Value="Top" />
                -->
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,5,2,10" />
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

            <!--  PaneNavigatorButtonDisplayMode  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True" />
                    <Condition Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="WhenHostedInBrowser" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="Always">
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== UnpinnedTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <Border SnapsToDevicePixels="true">
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <!--  AS 1/6/10 TFS25270 - TemplateBind the background and borderbrush instead of setting here and in triggers for base color.  -->
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,1,1"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="InnerBorder"
                                Margin="0,1,1,1"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHighlightFillKey}}"
                                BorderThickness="0,1,1,1"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                    <DockPanel>
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Path=Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Path=Pane.HasImage,
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent},
                                                                          Converter={StaticResource BoolToVisConverter}}" />
                        <ContentPresenter x:Name="contentHeader"
                                          HorizontalAlignment="{Binding Path=HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding Path=VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ThemeColorTextFillKey}}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />
                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOverTab" Value="True">
                <!--
                    AS 1/6/10 TFS25270 Duplicate setter
                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
                -->
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackHighlightFillKey}}" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                -->
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}}" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter Property="Padding" Value="3,4,4,3" />
                <Setter Property="Margin" Value="-1,0,0,0" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopCenterFillKey}}" />
                -->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="Padding" Value="3,4,4,4" />
                <Setter Property="Margin" Value="-1,0,0,0" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomCenterFillKey}}" />
                -->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,0,1,1" />
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="Padding" Value="4,5,4,3" />
                <Setter Property="Margin" Value="0,-1,0,0" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightCenterFillKey}}" />
                -->
                <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1" />
                <Setter TargetName="InnerBorder" Property="Margin" Value="1,1,0,1" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="Padding" Value="4,5,4,3" />
                <Setter Property="Margin" Value="0,-1,0,0" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>


            <!--  Hottrack for UnpinnedTabItems  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <!--  Hottrack for UnpinnedTabItems  -->

            <!--  IsFirstInGroup = True  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="15,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="15,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,15,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,15,0,0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->
    <!--  ResourceKey Templates [End]  -->
    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->




    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->
    <!--  ResourceKey Styles [Start]  -->
    <!--  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  -->

    <Style x:Key="paneCaptionButtonStyleBase"
           BasedOn="{StaticResource CaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  ========== PaneHeaderPresenter.MaximizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource maximizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="maximizeContent"
                                  Margin="3,3,0,0"
                                  Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z"
                                  Fill="{TemplateBinding Foreground}" />
                            <Path x:Name="restoreContent"
                                  Margin="3,2,0,0"
                                  Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
                                  Fill="{TemplateBinding Foreground}"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
                            <Setter TargetName="maximizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreDownToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  ========== PaneHeaderPresenter.MinimizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource minimizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="minimizeContent"
                                  Margin="3,3,0,0"
                                  Data="F1M0,9L7,9 7,8 0,8z"
                                  Fill="{TemplateBinding Foreground}" />
                            <Path x:Name="restoreContent"
                                  Margin="3,2,0,0"
                                  Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
                                  Fill="{TemplateBinding Foreground}"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igWindows:ToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
                            <Setter TargetName="minimizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreUpToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ========== PaneHeaderPresenter.CloseButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path Width="8"
                              Height="8"
                              Margin="3,3,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Data="M 5,4 C5,4 4,5 4,5 4,5 7,8 7,8 7,8 4,11 4,11 4,11 5,12 5,12 5,12 8,9 8,9 8,9 11,12 11,12 11,12 12,11 12,11 12,11 9,8 9,8 9,8 12,5 12,5 12,5 11,4 11,4 11,4 8,7 8,7 8,7 5,4 5,4 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.PinButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource pinToolTip}" />
        <Setter Property="Padding" Value="1.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path x:Name="PinnedGlyph"
                                  Width="7"
                                  Height="10"
                                  Margin="3,2,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Visible" />
                            <Path x:Name="UnpinnedGlyph"
                                  Width="10"
                                  Height="7"
                                  Margin="2,4,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                            <Setter TargetName="UnpinnedGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PinnedGlyph" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--
            <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
            <Setter Property="Content" Value="M2,0.99999994 C2,1 2,5.9810929 2,6 2,6 3.1274426,6 4,6 L4,0.99999994 C3.1302817,1 2.0073345,1 2,0.99999994 z M0.99999999,0 C0.99999999,0 5.9810991,0 6,0 6,0 6,0.98652494 6,0.99999994 6,1 6,5.9810929 6,6 6,6 6.986525,6 7,6 7,6 7,6.9889135 7,7 7,7 4.0199432,7 4,7 4,7 4,9.9800549 4,10 4,10 3.0134742,10&#xa;3,10 3,10 3,7.0199466 3,7 3,7 0.019948542,7 4.4703484E-08,7 -1.4901161E-08,7 -1.4901161E-08,6.0110855 4.4703484E-08,6 -1.4901161E-08,6 0.98652671,6 0.99999999,6 0.99999999,6 0.99999999,1.0113275 0.99999999,0.99999994 0.99999999,1 0.99999999,0.0048444755 0.99999999,0 z" />
            <Setter Property="LayoutTransform">
            <Setter.Value>
            <RotateTransform Angle="90"/>
            </Setter.Value>
            </Setter>
            </Trigger>
            </Style.Triggers>
        -->
    </Style>

    <!--  ========== TabGroupPane.DocumentCloseButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}"
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path Width="8"
                              Height="8"
                              Margin="2,1,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Data="M 1244,87 C1244,87 1243,88 1243,88 1243,88 1246,91 1246,91 1246,91 1243,94 1243,94 1243,94 1244,95 1244,95 1244,95 1247,92 1247,92 1247,92 1250,95 1250,95 1250,95 1251,94 1251,94 1251,94 1248,91 1248,91 1248,91 1251,88 1251,88 1251,88 1250,87 1250,87 1250,87 1247,90 1247,90 1247,90 1244,87 1244,87 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!--  Hottracked State  -->
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
            </DataTrigger>

            <!--  IsSubmenuOpen State  -->
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>


        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentPaneNavigatorButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}"
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource showNavigatorToolTip}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="15" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path Width="10"
                              Height="8"
                              Margin="2,4,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Data="M 4,6 C4,6 12,6 12,6 12,6 12,11 12,11 12,11 4,11 4,11 4,11 4,6 4,6 zM 3,4 C3,4 3,12 3,12 3,12 13,12 13,12 13,12 13,4 13,4 13,4 3,4 3,4 zM 9,7 C9,7 9,10 9,10 9,10 11,10 11,10 11,10 11,7 11,7 11,7 9,7 9,7 zM 7,9 C7,9 7,10 7,10 7,10 8,10 8,10 8,10 8,9 8,9 8,9 7,9 7,9 zM 7,7 C7,7 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 7,7 7,7 zM 5,7 C5,7 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 5,7 5,7 zM 5,9 C5,9 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 5,9 5,9 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Hottracked State  -->
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
            </DataTrigger>

            <!--  IsSubmenuOpen State  -->
            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentFilesMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}"
           BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource filesToolTip}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}" />
        <Setter Property="Margin" Value="0,3,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Path x:Name="AllItemsInViewGlyph"
                                      Width="9"
                                      Height="4"
                                      Margin="2,4,0,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Data="M 3,4 C3,4 7.5,7.5 7.5,7.5 7.5,7.5 12,4 12,4 12,4 3,4 3,4 z"
                                      Fill="{TemplateBinding Foreground}"
                                      Opacity="1"
                                      Stretch="Fill" />
                                <Path x:Name="HasItemsOutOfViewGlyph"
                                      Width="9"
                                      Height="7"
                                      Margin="2,3,0,0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Data="M0,3 C0,3 9,3 9,3 9,3 4.5,7.5 4.5,7.5 4.5,7.5 0,3 0,3 z M0,0 L9,0 9,2 0,2 0,0 z"
                                      Fill="{TemplateBinding Foreground}"
                                      Opacity="1"
                                      Stretch="Fill"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding Path=IsSubmenuOpen,
                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Grid x:Name="MenuItem"
                                      Width="Auto"
                                      Height="Auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="27" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.ColumnSpan="2"
                                               Margin="0,0,0,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                               Opacity="1"
                                               SnapsToDevicePixels="True"
                                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                               StrokeThickness="1" />

                                    <!--
                                        Harry 03.20.2008
                                        Created icon area background template and moved
                                        it to the MenuItem.SubMenuItemStyleKey
                                    -->

                                    <!--
                                        <Border Grid.ColumnSpan="1"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        BorderThickness="0,0,1,0"
                                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}"
                                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}"
                                        Margin="3,3,0,3"
                                        SnapsToDevicePixels="True" />
                                    -->

                                    <ScrollViewer Grid.ColumnSpan="2"
                                                  Margin="3"
                                                  CanContentScroll="True"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                                TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Grid>
                            </luna:SystemDropShadowChrome>
                        </Popup>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
                            <Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Hottracked State  -->
            <DataTrigger Binding="{Binding Path=IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
            </DataTrigger>

            <!--  IsSubmenuOpen State  -->
            <DataTrigger Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ========== PaneHeaderPresenter.PositionMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}"
           BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Path Width="9"
                                  Height="4.5"
                                  Margin="2,7,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Data="M 3,8 C3,8 7.5,12.5 7.5,12.5 7.5,12.5 12,8 12,8 12,8 3,8 3,8 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding Path=IsSubmenuOpen,
                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <luna:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <Grid x:Name="MenuItem"
                                      Width="Auto"
                                      Height="Auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="27" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.ColumnSpan="2"
                                               Margin="0,0,0,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch"
                                               Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                               Opacity="1"
                                               SnapsToDevicePixels="True"
                                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                               StrokeThickness="1" />

                                    <!--
                                        Harry 03.20.2008
                                        Created icon area background template and moved
                                        it to the MenuItem.SubMenuItemStyleKey
                                    -->

                                    <!--
                                        <Border Grid.ColumnSpan="1"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        BorderThickness="0,0,1,0"
                                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}"
                                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}"
                                        Margin="3,3,0,3"
                                        SnapsToDevicePixels="True" />
                                    -->

                                    <ScrollViewer Grid.ColumnSpan="2"
                                                  Margin="3"
                                                  CanContentScroll="True"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                                TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Grid>
                            </luna:SystemDropShadowChrome>
                        </Popup>
                    </igWindows:CardPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="False" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}}" />
            </MultiDataTrigger>

            <!--  IsPressed Button  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
            </MultiDataTrigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ========== XamDockManager.MenuItemSeparatorStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.MenuItemSeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid Height="{TemplateBinding Height}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="iconColumn"
                                              Width="Auto"
                                              MinWidth="27"
                                              SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="IconAreaBackground" Style="{StaticResource MenuItem_IconAreaBackground}" />

                        <Border Grid.Column="1"
                                Height="2"
                                Margin="9,2,0,2"
                                Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorLightFillKey}}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorDarkFillKey}}"
                                BorderThickness="0,1,0,0"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers />
    </Style>

    <!--  ========== XamDockManager.MenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.MenuItemStyleKey}" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}" />
        <Setter Property="Control.Template" Value="{DynamicResource {x:Static igDock:XamDockManager.SubMenuItemTemplateKey}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers />
    </Style>

    <!--  ========== XamDockManager.ContextMenuStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.ContextMenuStyleKey}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <luna:SystemDropShadowChrome Name="Shdw"
                                                 SnapsToDevicePixels="true"
                                                 Color="Transparent">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </luna:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== XamDockManager.ToolTipStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.ToolTipStyleKey}" TargetType="{x:Type ToolTip}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipCenterFillKey}}" />
    </Style>

    <!--  ========== PaneSplitter.PreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneSplitter.PreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Rectangle Fill="#7F000000" SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== XamDockManager.DropPreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.DropPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
        <Setter Property="Opacity" Value=".39" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Bottom">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabBottom}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Top">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabTop}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Right">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabRight}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Left">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabLeft}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== XamDockManager.FloatingWindowPreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.FloatingWindowPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Opacity" Value=".39" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneNavigatorItemsPanel.ScrollUpButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollUpButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Path Width="9"
                                  Height="4.5"
                                  Margin="0,4,0,4"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,4.5L4.5,0 9,4.5z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneNavigatorItemsPanel.ScrollDownButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollDownButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Path Width="9"
                                  Height="4.5"
                                  Margin="0,4,0,4"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,0L4.5,4.5 9,0z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->
    <!--  ResourceKey Styles [End]  -->
    <!--  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  -->



</ResourceDictionary>
