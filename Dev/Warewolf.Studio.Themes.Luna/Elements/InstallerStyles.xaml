<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--  New Warewolf Palette  -->
    <Color x:Key="WarewolfButtonGrey">#FF606160</Color>
    <Color x:Key="WarewolfWhite">#FFFFFFFF</Color>
    <Color x:Key="WarewolfOrange">#FFF3700D</Color>
    <Color x:Key="WarewolfWatermark">#B8B8B8</Color>
    <Color x:Key="WarewolfPanelGrey">#FFF4F2EE</Color>
    <Color x:Key="WarewolfLineGrey">#FFE7E4E0</Color>
    <Color x:Key="Color_028">#FFA60013</Color>
    <Color x:Key="Color_029">#FFF55E7F</Color>
    <Color x:Key="Color_025">#FFF19D5E</Color>
    <Color x:Key="Color_023">#FFF3700D</Color>
    <Color x:Key="Color_024">#FFff8613</Color>
    <Color x:Key="WarewolfDisabledText">#FF606160</Color>

    <!--  *********************************  FONTS   *********************************  -->
    <FontFamily x:Key="DefaultFontFamily">Source Sans Pro</FontFamily>
    <system:Double x:Key="FontSize-Normal">12</system:Double>
    <system:Double x:Key="FontSize-Larger">17</system:Double>

    <!--  Warewolf Brushes  -->
    <SolidColorBrush x:Key="WarewolfHeaderWatermarkGreyBrush" Color="{StaticResource WarewolfWatermark}" />
    <SolidColorBrush x:Key="WareWolfButtonBrush" Color="{StaticResource WarewolfButtonGrey}" />
    <SolidColorBrush x:Key="ValidationErrorElement" Color="{StaticResource Color_028}" />
    <SolidColorBrush x:Key="DisabledVisualElement" Color="{StaticResource WarewolfDisabledText}" />

    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource WarewolfButtonGrey}" />
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource WarewolfWatermark}" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource WarewolfOrange}" />

    <!--  *********************************  ButtonStyle  *********************************  -->
    <Style x:Key="PopupRoundedCornerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{StaticResource ButtonHoverBackgroundBrush}"
                                BorderBrush="{StaticResource ButtonHoverBackgroundBrush}"
                                BorderThickness="1"
                                CornerRadius="13">

                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Border>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{StaticResource ButtonBorderBrush}"
                                BorderBrush="{StaticResource ButtonBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="13"
                                Opacity="0.4"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="CheckBoxNormalBorderBrush" Color="{StaticResource WarewolfWatermark}" />
    <SolidColorBrush x:Key="CheckBoxHoverBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="CheckBoxPressedBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="CheckBoxPressedBorderBrush" Color="{StaticResource WarewolfButtonGrey}" />
    <SolidColorBrush x:Key="CheckBoxFocusedBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="CheckBoxFocusedBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBackgroundBrush" Color="{StaticResource WarewolfPanelGrey}" />
    <SolidColorBrush x:Key="CheckBoxInvalidFocusedBackgroundBrush" Color="{StaticResource WarewolfPanelGrey}" />
    <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBorderBrush" Color="{StaticResource Color_029}" />
    <SolidColorBrush x:Key="CheckBoxInvalidFocusedBorderBrush" Color="{StaticResource Color_028}" />
    <SolidColorBrush x:Key="CheckBoxCheckedBrush" Color="{StaticResource WarewolfButtonGrey}" />

    <!--  ********************************** CheckBoxStyle **********************************  -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource WarewolfWhite}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="hover"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="pressed"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="contentPresenter"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To=".55" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="disabled"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="checkBox"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="IndeterminateCheck"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="focused"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="invalidUnfocused"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="invalidFocused"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" />
                        <Rectangle x:Name="normal"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxBackgroundBrush}"
                                   Opacity="1"
                                   Stroke="{StaticResource CheckBoxNormalBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="hover"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxHoverBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxHoverBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="pressed"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxPressedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxPressedBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="focused"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxFocusedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxFocusedBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="invalidUnfocused"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidUnfocusedBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="invalidFocused"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                                   StrokeThickness="1" />
                        <Path x:Name="checkBox"
                              Width="12"
                              Height="10"
                              Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                              Fill="{StaticResource CheckBoxCheckedBrush}"
                              Opacity="0"
                              Stretch="Fill"
                              UseLayoutRounding="False" />
                        <Rectangle x:Name="IndeterminateCheck"
                                   Width="8"
                                   Height="3"
                                   Fill="{StaticResource CheckBoxCheckedBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="disabled"
                                   Width="18"
                                   Height="18"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Opacity="0"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="ProgressBarForegroundBrush" Color="{StaticResource Color_025}" />
    <LinearGradientBrush x:Key="ProgressBarIndeterminateBackgroundBrush" MappingMode="Absolute" Opacity="0.8" SpreadMethod="Repeat" StartPoint="20,1" EndPoint="0,1">
        <LinearGradientBrush.Transform>
            <TransformGroup>
                <TranslateTransform X="0" />
                <SkewTransform AngleX="-30" />
            </TransformGroup>
        </LinearGradientBrush.Transform>
        <GradientStop Offset="0.249" Color="{StaticResource Color_023}" />
        <GradientStop Offset=".25" Color="{StaticResource Color_024}" />
        <GradientStop Offset="0.75" Color="{StaticResource Color_024}" />
        <GradientStop Offset="0.751" Color="{StaticResource Color_023}" />
    </LinearGradientBrush>
    
    <!--  ********************************** ProgressBar Style **********************************  -->
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource WarewolfHeaderWatermarkGreyBrush}" />
        <Setter Property="Height" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="00:00:.5"
                                                         From="0"
                                                         Storyboard.TargetName="IndeterminateGradientFill"
                                                         Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X"
                                                         To="20" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ProgressBarTrack"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_Track" Margin="{TemplateBinding BorderThickness}" />
                        <Decorator x:Name="PART_Indicator"
                                   Margin="{TemplateBinding BorderThickness}"
                                   HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Decorator>
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle x:Name="IndeterminateSolidFill"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Fill="{TemplateBinding Foreground}"
                                       Opacity="1"
                                       RenderTransformOrigin="0.5,0.5"
                                       StrokeThickness="0" />
                            <Rectangle x:Name="IndeterminateGradientFill"
                                       Margin="{TemplateBinding BorderThickness}"
                                       Fill="{StaticResource ProgressBarIndeterminateBackgroundBrush}"
                                       StrokeThickness="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  *********************************  Implicit Styles  *********************************  -->
    <Style BasedOn="{StaticResource ProgressBarStyle}" TargetType="{x:Type ProgressBar}" />


    <!--  *********************************  TextBlock Style  *********************************  -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="TextElement.Foreground" Value="{StaticResource ValidationErrorElement}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="HoverUnderlineStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  Implicit Styles  *********************************  -->
    <Style BasedOn="{StaticResource TextBlockStyle}" TargetType="{x:Type TextBlock}" />


    <!--  *********************************  Label Style  *********************************  -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize-Larger}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource WareWolfButtonBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="4" />
    </Style>


    <!--  TextBox Brushes  -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource WarewolfLineGrey}" />
    <SolidColorBrush x:Key="TextBoxHoverBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="TextBoxDisabledBackgroundBrush" Color="{StaticResource Color_025}" />
    <!--  DO NOT make TextBoxHoverBackgroundBrush transparent!  -->
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush" Color="{StaticResource WarewolfPanelGrey}" />

    <!--  ********************************** Hyperlink Style **********************************  -->
    <Style TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextBoxDisabledBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource TextBoxHoverBorderBrush}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    </Style>
</ResourceDictionary>